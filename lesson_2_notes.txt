A Git repository will always have a .git file in it. The period before the file name means that by default it is hidden from the user 

Git uses a 'staging area' to allow finer-grained control over which files should be included in a specific commit


git init
	makes a folder a repository. Folder can be empty or already have files
	git doesn't create any commits for you. Those need to be done yourself.

	"git status" can then be used to make sure the directory was created, and to show the files that are not added to the directory

git add <filename>
	adds file <filename> to staging area

git reset <filename>
	removed file <filename> from the staging area

git reset --hard
	undo all changes in the working directory and staging area. be careful when using this

git commit -m "<message>"
	commits the files in the current staging area to the repository, with the <message> logged

	write your git messages in the imperative (meaning they should sound like a command, instead of past tense)

git diff
	we have seen this command already, though it was used to compare two different commits (as referenced by their commit IDs) If run with no argument, it compares the working directory to the staging area

git diff --staged
	diff between the files in the staged area and the current commit. Until files are added to the staging area, the staging area is just a copy of the most recent commit, so there will be no diffs

