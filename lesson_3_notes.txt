Git has the concept of a 'remote repository' (also called a 'remote'), which is the known location of a repository that you will want to pull changes from and push changes to

When you push and pull from a remote repository, it is often easy to specify a particular branch. not every commit is pushed or pulled for a specific branch - only those commits that are not already stored on the remote or in the local repo

You can clone a local repository to another location on your computer

git pull is the same as running git fetch then git merge. If you want to know what changes pulling from a branch will cause, then you can run git fetch, do a diff on the applicable branches, then merge the fetches branch with the master branch. Alternatively, you can just run git pull

fast-forward merges operate on a branch, and 'change where the branch points'. The branch only points to one commit (usually at the tip) and a fast-forward merge is used to update this

Git is the version control tool that GitHub is built on. Git is local, GitHub is where we share and collaborate with other people

-------- Putting it all together ----------
start by initializing a repo or forking an existing one on GitHub and then cloning it
make a separate branch so you aren't doing dev work in master
create a pull request when your work is complete
might need to pull origin/master and merge master with your dev branch to continue updating pull request
push final merged code to remote, deleting dev branch
--------------------------------------------

---better understanding---

make changes to master
switch back to garrett
try and merge


git remote
	can be run to view current remotes
	-v command shows what URLs are associated with each remote

git remote add <name> <URL>
	when you have one remote, it is most common to name it origin

git push <remote> <branch>
	push all changes from the currently checked-out branch to the indicated remote
	wonder if there is a way to see what changes will be pushed?

git pull <remote> <branch>
	pulls the specified branch from the specified remote to your local copy

git fetch <remote>
	updates the <remote>/master commit in your local copy to the master commit on the remote (origin) branch